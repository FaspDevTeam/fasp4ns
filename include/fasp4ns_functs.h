/*******************************************************************/  
/* This header file is automatically generated with "make headers".*/
/* WARNING: DO NOT EDIT THIS FILE!!!                               */  
/*******************************************************************/

/*! \file fasp4ns_functs.h
 *  \brief Function decroration for the FASP package
 */ 

#include "fasp.h" 
#include "fasp_block.h" 

/*-------- In file: assemble.c --------*/

int assemble(block_dCSRmat *ptr_A, dvector *ptr_b, int gridnum);


/*-------- In file: init.c --------*/

void fasp_precond_ns_param_init (precond_ns_param *sparam);

void fasp_precond_ns_data_init (precond_ns_data *sprecdata);

void fasp_precond_ns_param_set(precond_ns_param *sparam,
                                   input_param *Input);

void fasp_precond_ns_data_set (precond_ns_data *sprecdata,
                                    input_param *Input);

void fasp_ns_param_init(input_param *Input,
                            precond_ns_param *sparam,
                            precond_ns_data  *sprecdata);


/*-------- In file: input.c --------*/

void fasp_ns_param_input (char *filenm, 
                          input_param *Input);


/*-------- In file: io.c --------*/

void fasp_bdcsr_read (char *fileA,
                      char *fileB,
                      char *fileC,
                      char *filerhs,
                      block_dCSRmat *A,
                      dvector *r);

void fasp_bdcsr_read_ruth (char *fileA,
			   char *fileB,
			   char *fileC,
			   char *fileD,
			   char *filerhs,
			   char *filex0,
			   block_dCSRmat *A,
			   dvector *r,
			   dvector *x0);


/*-------- In file: itsolver_ns.c --------*/

int fasp_ns_solver_itsolver(block_dCSRmat *A, 
                               dvector *b, 
                               dvector *x, 
                               precond *prec, 
                               itsolver_param *itparam);

int fasp_solver_bdcsr_krylov_navier_stokes (block_dCSRmat *Mat,
                                        dvector *b,
                                        dvector *x,
                                        itsolver_param *itparam,
                                        AMG_param *amgparam,
                                        ILU_param *iluparam,
                                        Schwarz_param *schparam);

INT fasp_solver_bdcsr_krylov_ns (block_dCSRmat *Mat, 
                                     dvector *b, 
                                     dvector *x, 
                                     itsolver_param *itparam,
                                     precond_ns_param *param, 
                                     precond_ns_data *precdata);

void fasp_get_schur_complement(dCSRmat *B,dCSRmat *Bt,dCSRmat *A,dCSRmat *C,dCSRmat *S,dCSRmat *P);


/*-------- In file: pgcr.c --------*/

int fasp_solver_bdcsr_pgcr (block_dCSRmat *A, 
                            dvector *b, 
                            dvector *u, 
                            const int MaxIt, 
                            const double tol,
                            precond *pre, 
                            const int print_level, 
                            const int stop_type, 
                            const int restart);


/*-------- In file: precond_ns.c --------*/

void fasp_precond_ns_bdiag (REAL *r, 
                            REAL *z,
                            void *data);

void fasp_precond_ns_low_btri (REAL *r,
                                  REAL *z, 
                                  void *data);
void fasp_precond_ns_up_btri (REAL *r,
                              REAL *z,
                              void *data);

void fasp_precond_ns_sym_btri (REAL *r,
                               REAL *z,
                               void *data);

void fasp_precond_ns_lsc (REAL *r, 
                              REAL *z, 
                              void *data);


/*-------- In file: pvfgmres.c --------*/

INT fasp_solver_bdcsr_pvfgmres (block_dCSRmat *A,
                                dvector *b,
                                dvector *x,
                                precond *pre,
                                const REAL tol,
                                const INT MaxIt,
                                const SHORT restart,
                                const SHORT stop_type,
                                const SHORT print_level
                                );


/*-------- In file: wrapper.c --------*/

void fasp_fwrapper_krylov_ns_ (INT *nA, 
                                   INT *nnzA, 
                                   INT *ia,
                                   INT *ja,
                                   REAL *aval, 
                                   INT *nB,
                                   INT *nnzB, 
                                   INT *ib,
                                   INT *jb,
                                   REAL *bval,
                                   INT *nM, 
                                   INT *nnzM,
                                   INT *im, 
                                   INT *jm, 
                                   REAL *mval,												 
                                   INT *nP, 
                                   INT *nnzP, 
                                   INT *ip, 
                                   INT *jp, 
                                   REAL *pval,												 
                                   REAL *b, 
                                   REAL *u, 
                                   REAL *beta,
                                   REAL *tol, 
                                   INT *maxit, 
                                   INT *ptrlvl);

void fasp_fwrapper_krylov_navier_stokes_ (INT *nA, 
                               INT *nnzA, 
                               INT *ia,
                               INT *ja,
                               REAL *aval, 
                               INT *nB,
                               INT *nnzB, 
                               INT *ib,
                               INT *jb,
                               REAL *bval,		 
                               INT *nC, 
                               INT *nnzC, 
                               INT *ic, 
                               INT *jc, 
                               REAL *cval, 
                               REAL *b, 
                               REAL *u);

/* Ene of fasp4ns_functs.h */
